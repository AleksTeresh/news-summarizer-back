/*
 * This file is generated by jOOQ.
*/
package fi.redgrenade.summarizer.db.tables.daos;


import fi.redgrenade.summarizer.db.tables.ArticleKeyWord;
import fi.redgrenade.summarizer.db.tables.records.ArticleKeyWordRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleKeyWordDao extends DAOImpl<ArticleKeyWordRecord, fi.redgrenade.summarizer.db.tables.pojos.ArticleKeyWord, Record2<Long, Long>> {

    /**
     * Create a new ArticleKeyWordDao without any configuration
     */
    public ArticleKeyWordDao() {
        super(ArticleKeyWord.ARTICLE_KEY_WORD, fi.redgrenade.summarizer.db.tables.pojos.ArticleKeyWord.class);
    }

    /**
     * Create a new ArticleKeyWordDao with an attached configuration
     */
    public ArticleKeyWordDao(Configuration configuration) {
        super(ArticleKeyWord.ARTICLE_KEY_WORD, fi.redgrenade.summarizer.db.tables.pojos.ArticleKeyWord.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Long, Long> getId(fi.redgrenade.summarizer.db.tables.pojos.ArticleKeyWord object) {
        return compositeKeyRecord(object.getArticleId(), object.getKeyWordId());
    }

    /**
     * Fetch records that have <code>article_id IN (values)</code>
     */
    public List<fi.redgrenade.summarizer.db.tables.pojos.ArticleKeyWord> fetchByArticleId(Long... values) {
        return fetch(ArticleKeyWord.ARTICLE_KEY_WORD.ARTICLE_ID, values);
    }

    /**
     * Fetch records that have <code>key_word_id IN (values)</code>
     */
    public List<fi.redgrenade.summarizer.db.tables.pojos.ArticleKeyWord> fetchByKeyWordId(Long... values) {
        return fetch(ArticleKeyWord.ARTICLE_KEY_WORD.KEY_WORD_ID, values);
    }
}
